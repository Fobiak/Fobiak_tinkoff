/*
 * This file is generated by jOOQ.
 */
package ru.tinkoff.edu.java.scrapper.domain.jooq.codegen.tables.pojos;


import jakarta.validation.constraints.Size;
import org.jetbrains.annotations.NotNull;

import javax.annotation.processing.Generated;
import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Link implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String url;
    private LocalDateTime lastUpdate;
    private LocalDateTime lastEditTime;
    private Integer countCommitOrQuestion;

    public Link() {}

    public Link(Link value) {
        this.id = value.id;
        this.url = value.url;
        this.lastUpdate = value.lastUpdate;
        this.lastEditTime = value.lastEditTime;
        this.countCommitOrQuestion = value.countCommitOrQuestion;
    }

    @ConstructorProperties({ "id", "url", "lastUpdate", "lastEditTime", "countCommitOrQuestion" })
    public Link(
        @NotNull Integer id,
        @NotNull String url,
        @NotNull LocalDateTime lastUpdate,
        @NotNull LocalDateTime lastEditTime,
        @NotNull Integer countCommitOrQuestion
    ) {
        this.id = id;
        this.url = url;
        this.lastUpdate = lastUpdate;
        this.lastEditTime = lastEditTime;
        this.countCommitOrQuestion = countCommitOrQuestion;
    }

    /**
     * Getter for <code>LINK.ID</code>.
     */
    @NotNull
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>LINK.ID</code>.
     */
    public void setId(@NotNull Integer id) {
        this.id = id;
    }

    /**
     * Getter for <code>LINK.URL</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 1000000000)
    @NotNull
    public String getUrl() {
        return this.url;
    }

    /**
     * Setter for <code>LINK.URL</code>.
     */
    public void setUrl(@NotNull String url) {
        this.url = url;
    }

    /**
     * Getter for <code>LINK.LAST_UPDATE</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public LocalDateTime getLastUpdate() {
        return this.lastUpdate;
    }

    /**
     * Setter for <code>LINK.LAST_UPDATE</code>.
     */
    public void setLastUpdate(@NotNull LocalDateTime lastUpdate) {
        this.lastUpdate = lastUpdate;
    }

    /**
     * Getter for <code>LINK.LAST_EDIT_TIME</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public LocalDateTime getLastEditTime() {
        return this.lastEditTime;
    }

    /**
     * Setter for <code>LINK.LAST_EDIT_TIME</code>.
     */
    public void setLastEditTime(@NotNull LocalDateTime lastEditTime) {
        this.lastEditTime = lastEditTime;
    }

    /**
     * Getter for <code>LINK.COUNT_COMMIT_OR_QUESTION</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Integer getCountCommitOrQuestion() {
        return this.countCommitOrQuestion;
    }

    /**
     * Setter for <code>LINK.COUNT_COMMIT_OR_QUESTION</code>.
     */
    public void setCountCommitOrQuestion(@NotNull Integer countCommitOrQuestion) {
        this.countCommitOrQuestion = countCommitOrQuestion;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Link other = (Link) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.url == null) {
            if (other.url != null)
                return false;
        }
        else if (!this.url.equals(other.url))
            return false;
        if (this.lastUpdate == null) {
            if (other.lastUpdate != null)
                return false;
        }
        else if (!this.lastUpdate.equals(other.lastUpdate))
            return false;
        if (this.lastEditTime == null) {
            if (other.lastEditTime != null)
                return false;
        }
        else if (!this.lastEditTime.equals(other.lastEditTime))
            return false;
        if (this.countCommitOrQuestion == null) {
            if (other.countCommitOrQuestion != null)
                return false;
        }
        else if (!this.countCommitOrQuestion.equals(other.countCommitOrQuestion))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.url == null) ? 0 : this.url.hashCode());
        result = prime * result + ((this.lastUpdate == null) ? 0 : this.lastUpdate.hashCode());
        result = prime * result + ((this.lastEditTime == null) ? 0 : this.lastEditTime.hashCode());
        result = prime * result + ((this.countCommitOrQuestion == null) ? 0 : this.countCommitOrQuestion.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Link (");

        sb.append(id);
        sb.append(", ").append(url);
        sb.append(", ").append(lastUpdate);
        sb.append(", ").append(lastEditTime);
        sb.append(", ").append(countCommitOrQuestion);

        sb.append(")");
        return sb.toString();
    }
}
