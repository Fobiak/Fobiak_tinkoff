/*
 * This file is generated by jOOQ.
 */
package ru.tinkoff.edu.java.scrapper.domain.jooq.codegen.tables.pojos;


import org.jetbrains.annotations.NotNull;

import javax.annotation.processing.Generated;
import java.beans.ConstructorProperties;
import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserLinks implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long userId;
    private Long linksId;

    public UserLinks() {}

    public UserLinks(UserLinks value) {
        this.userId = value.userId;
        this.linksId = value.linksId;
    }

    @ConstructorProperties({ "userId", "linksId" })
    public UserLinks(
        @NotNull Long userId,
        @NotNull Long linksId
    ) {
        this.userId = userId;
        this.linksId = linksId;
    }

    /**
     * Getter for <code>USER_LINKS.USER_ID</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>USER_LINKS.USER_ID</code>.
     */
    public void setUserId(@NotNull Long userId) {
        this.userId = userId;
    }

    /**
     * Getter for <code>USER_LINKS.LINKS_ID</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getLinksId() {
        return this.linksId;
    }

    /**
     * Setter for <code>USER_LINKS.LINKS_ID</code>.
     */
    public void setLinksId(@NotNull Long linksId) {
        this.linksId = linksId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final UserLinks other = (UserLinks) obj;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.linksId == null) {
            if (other.linksId != null)
                return false;
        }
        else if (!this.linksId.equals(other.linksId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.linksId == null) ? 0 : this.linksId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UserLinks (");

        sb.append(userId);
        sb.append(", ").append(linksId);

        sb.append(")");
        return sb.toString();
    }
}
